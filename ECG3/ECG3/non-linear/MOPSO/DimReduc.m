function [ data ] = DimReduc( personal_Ns,dim,norm )

%loading DS1 for normalization MITDS1
load('\\EGRSHARES\Homes\NAU\jc3464\Documents\MATLAB\ECG2\MITDB(non-normalized)\mitds1.mat')
DS1 = MITDS1(:,1:end-1);
y = MITDS1(:,end);
clear MITDS1

if dim == 4
    disp('reduce the linear data to 4 dimension')
    %mask is generated by sequential feature selection result by DS1
    load('\\EGRSHARES\Homes\NAU\jc3464\Documents\MATLAB\ECG2\Global Model\mask28to14.mat')
    fs = personal_Ns(:,mask);
    N = size(personal_Ns,1);%size of personal normal samples
    DS1 = DS1(:,mask);
    %normalization
    nDS1 = zscore([fs;DS1]);
    %load PCA coeff
    load('\\EGRSHARES\Homes\NAU\jc3464\Documents\MATLAB\ECG2\Global Model\coeff14_14.mat')
    nDS1 = nDS1*coeff(:,1:4);
    DS1 = nDS1(N+1:end,:);
    attributes = nDS1(1:N,:);

    VFS_lib = DS1(find(y~=1),1:end);

    if N < 200
        N_lib = DS1(find(y==1),1:end);
        [~,I] = sort(pdist2(mean(attributes,1),N_lib));
        add_ons = I(1:200-N);
    end
    
    attributes = [attributes; N_lib(add_ons,:)];

elseif dim == 8
    disp('reduce the linear data to 8 dimension')
    %mask is generated by sequential feature selection result by DS1
    load('\\EGRSHARES\Homes\NAU\jc3464\Documents\MATLAB\ECG2\Global Model\mask28to22.mat')
    fs = personal_Ns(:,mask);
    N = size(personal_Ns,1);%size of personal normal samples
    DS1 = DS1(:,mask);
    %normalization
    nDS1 = zscore([fs;DS1]);
    %load PCA coeff
    load('\\EGRSHARES\Homes\NAU\jc3464\Documents\MATLAB\ECG2\Global Model\coeff22_22.mat')
    nDS1 = nDS1*coeff(:,1:8);
    DS1 = nDS1(N+1:end,:);
    attributes = nDS1(1:N,:);

    VFS_lib = DS1(find(y~=1),1:end);

    if N < 200
        N_lib = DS1(find(y==1),1:end);
        [~,I] = sort(pdist2(mean(attributes,1),N_lib));
        add_ons = I(1:200-N);
    end
    
    attributes = [attributes; N_lib(add_ons,:)];
end
    

N = size(attributes,1);

if norm == 1
    temp = zscore([attributes; VFS_lib(:,1:end-1); N_lib(:,1:end-1)]);
    data.N = temp(1:N,:);
    data.V = temp(N+find(VFS_lib(:,end)==2),:);
    data.S = temp(N+find(VFS_lib(:,end)==3),:);
    data.F = temp(N+find(VFS_lib(:,end)==4),:);
else
    data.N = attributes;
    data.V = DS1(find(y==2),:);
    data.S = DS1(find(y==3),:);
    data.F = DS1(find(y==4),:);
end



end

